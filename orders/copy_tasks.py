from celery import shared_task
import time

from django.contrib import messages

from django.core.exceptions import ValidationError
from django.db import transaction
from django.shortcuts import redirect, render

from cart.models import Cart
from orders.forms import CreateOrderForm
from orders.models import Order, OrderItem
from users.models import User


@shared_task
def add_to_queue(user_id, delivery_address, phone_number, requires_delivery, payment_on_get):
    print("üéØ –ó–∞–¥–∞—á–∞ Celery –∑–∞–ø—É—â–µ–Ω–∞")
    time.sleep(10)
    try:
        with transaction.atomic():
            user = User.objects.get(id=user_id)
            cart_items = Cart.objects.filter(user=user)
            if cart_items.exists():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—É—Å—Ç–∞ –ª–∏ –∫–æ—Ä–∑–∏–Ω–∞. –ï—Å–ª–∏ –≤ –Ω–µ–π –Ω–∏—á–µ–≥–æ –Ω–µ—Ç ‚Äî –∑–∞–∫–∞–∑ –Ω–µ —Å–æ–∑–¥–∞—ë–º.
                order = Order.objects.create(  # —Å–æ–∑–¥–∞—ë–º –∑–∞–∫–∞–∑ –∏–º–µ–Ω–Ω–æ 1 –∑–∞–∫–∞–∑ –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∏—Ö –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    user=user,
                    delivery_address=delivery_address,
                    phone_number=phone_number,
                    requires_delivery=requires_delivery,
                    payment_on_get=payment_on_get,
                )

                for cart_item in cart_items:  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è —Ü–∏–∫–ª–æ–º –ø–æ –∫–æ—Ä–∑–∏–Ω–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    product = cart_item.product  # —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –º—ã —Å—Å—ã–ª–∞–µ–º—Å—è –ø–æ foreign key
                    name = cart_item.product.name  # –±–µ—Ä—ë–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
                    price = cart_item.product.price  # –±–µ—Ä—ë–º —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞
                    quantity = cart_item.quantity  # —Ç–∞–∫ –∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ

                    if product.quantity < quantity:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –±–æ–ª—å—à–µ –ª–∏ –∑–∞–∫–∞–∑–∞–ª–∏ —á–µ–º —É –Ω–∞—Å –Ω–∞ —Å–ª–∞–¥–µ
                        raise ValidationError(f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ {name} –Ω–∞ —Å–∫–ª–∞–¥–µ\
                         –í –Ω–∞–ª–∏—á–∏–∏  {product.quantity}')  # –µ—Å–ª–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ –º–µ–Ω—å—à–µ —á–µ–º –∑–∞–∫–∞–∑–∞–ª–∏ –ø–æ–¥–Ω–∏–º–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

                    OrderItem.objects.create(  # —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–¥, –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                        order=order,  # —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ order
                        product=product,  # –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
                        name=name,  # —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
                        price=price,  # –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
                        quantity=quantity,  # –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                        status='–í—Å—ë –∑–±—Å',
                    )
                    product.quantity -= quantity  # –æ—Ç–Ω–∏–º–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
                    product.save()  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–¥

                cart_items.delete()  # —É–¥–∞–ª—è–µ–º —Ç–æ —á—Ç–æ –±—ã–ª–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ
                return 'Success'
            return 'None'
    except ValidationError:
        OrderItem.objects.create(
            order=order,
            product=product,
            name=name,
            price=price,
            quantity=quantity,
            status='–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑',
        )
        product.save()
        return None